version: 2
jobs:
build:
docker:
- image: circleci/ruby:2.5.5-node-browsers
environment:
DATABASE_URL: 'postgres://user@localhost:5432/user_test'
RAILS_ENV: test

- image: circleci/postgres:10.3-alpine
environment:
POSTGRES_USER: user
POSTGRES_DB: user_test
working_directory: ~/repo

steps:
- checkout

- restore_cache:
keys:
- v1-dependencies-{{ checksum "Gemfile.lock" }}
- v1-dependencies-

- run:
name: install dependencies
command: |
bundle install --jobs=4 --retry=3 --path vendor/bundle --clean

- save_cache:
paths:
- ./vendor/bundle
key: v1-dependencies-{{ checksum "Gemfile.lock" }}

- run:
name: Wait for DB
command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m

- run:
name: Update Chromedriver
command: |
wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
sudo apt-get update
sudo apt-get --only-upgrade install google-chrome-stable

- restore_cache:
keys:
- rails-yarn-{{ checksum "yarn.lock" }}
- rails-yarn-

- run:
name: Yarn Install
command: yarn install --cache-folder ~/.cache/yarn

- save_cache:
paths:
- ~/.cache/yarn
key: rails-yarn-{{ checksum "yarn.lock" }}

- run:
name: Rubocop
command: |
bundle exec rubocop -d

- run:
name: Lint
command: |
bundle exec slim-lint app/views -c config/slim_lint.yml

- run:
name: Test
command: |
bundle exec rake db:schema:load
./bin/test

- store_test_results:
path: /tmp/test-results
- store_artifacts:
path: /tmp/test-results
destination: test-results

auto_correction:
working_directory: ~/repo
docker:
- image: circleci/ruby:2.5.5
steps:
- checkout
- run: "[[ ! -s \"$(git rev-parse --git-dir)/shallow\" ]] || git fetch --unshallow"
- restore_cache:
key: v1-dependencies-{{ checksum "Gemfile.lock" }}
- run:
name: install dependencies
command: |
bundle install --jobs=4 --retry=3 --path vendor/bundle --clean
- save_cache:
paths:
- ./vendor/bundle
key: v1-dependencies-{{ checksum "Gemfile.lock" }}
- run:
command: bundle exec danger
name: danger

factory_bot_lint:
working_directory: ~/repo
docker:
- image: circleci/ruby:2.5.5-node-browsers
environment:
DATABASE_URL: 'postgres://user@localhost:5432/user_test'
RAILS_ENV: test

- image: circleci/postgres:10.3-alpine
environment:
POSTGRES_USER: user
POSTGRES_DB: user_test
steps:
- checkout

- restore_cache:
keys:
- v1-dependencies-{{ checksum "Gemfile.lock" }}
- v1-dependencies-

- run:
name: install dependencies
command: |
bundle install --jobs=4 --retry=3 --path vendor/bundle --clean

- save_cache:
paths:
- ./vendor/bundle
key: v1-dependencies-{{ checksum "Gemfile.lock" }}

- run:
name: Wait for DB
command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m

- run:
name: Lint
command: |
bundle exec rake db:schema:load
bundle exec rails factory_bot:lint

continuous_bundle_update:
working_directory: ~/repo
docker:
- image: circleci/ruby:2.5.5-node-browsers
steps:
- checkout

- run:
name: install dependencies
command: |
bundle install --jobs=4 --retry=3 --path vendor/bundle --clean
- run:
name: Setup requirements for continuous bundle update
command: gem install -N circleci-bundle-update-pr
- deploy:
name: Continuous bundle update
command: circleci-bundle-update-pr 'Hiroyuki Morita' 'chiastolite.1980@gmail.com'

workflows:
version: 2

workflow:
jobs:
- build
- auto_correction:
filters:
branches:
ignore:
- /ci\/.*/
- /bundle-update.*/
- factory_bot_lint:
filters:
branches:
ignore:
- /ci\/.*/
- /bundle-update.*/
- master
nightly:
triggers:
- schedule:
cron: "00 10 *"
filters:
branches:
only: master
jobs:
- continuous_bundle_update
